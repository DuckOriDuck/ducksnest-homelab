---
# DucksNest Homelab - 메인 플레이북
# 전체 인프라를 설정하고 관리하는 플레이북

- name: DucksNest Homelab Infrastructure Setup
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Display deployment start message
      debug:
        msg: "🦆 DucksNest Homelab 배포를 시작합니다..."

# 1. 공통 시스템 설정
- import_playbook: playbooks/common.yml

# 2. Tailscale 클라이언트 설치 (모든 노드)
- import_playbook: playbooks/tailscale.yml

# 3. Jenkins & Headscale 서버 설정
- import_playbook: playbooks/jenkins-headscale.yml

# 4. Kubernetes Control Plane 설정
- import_playbook: playbooks/k8s-control-plane.yml

# 5. 최종 검증
- name: Final Verification
  hosts: all
  gather_facts: true
  tasks:
    - name: Display system status
      debug:
        msg: |
          Host: {{ inventory_hostname }}
          OS: {{ ansible_distribution }} {{ ansible_distribution_version }}
          Uptime: {{ ansible_uptime_seconds | default(0) | int | human_readable }}
          Memory: {{ ansible_memory_mb.real.used }}MB / {{ ansible_memory_mb.real.total }}MB
          
    - name: Check service status
      systemd:
        name: "{{ item }}"
        state: started
      loop:
        - ssh
        - ufw
      ignore_errors: true
      
- name: Deployment Complete
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Display completion message
      debug:
        msg: |
          🎉 DucksNest Homelab 배포가 완료되었습니다!
          
          📊 Jenkins: http://{{ hostvars[groups['jenkins_headscale'][0]]['ansible_host'] }}:8080
          🔗 Headscale: https://{{ hostvars[groups['jenkins_headscale'][0]]['ansible_host'] }}
          ☸️  Kubernetes API: https://{{ hostvars[groups['k8s_control_plane'][0]]['tailscale_ip'] | default('TAILSCALE_IP') }}:6443
          
          다음 단계:
          1. Tailscale 클라이언트들을 Headscale에 등록
          2. Jenkins 초기 설정 완료
          3. 온프레미스 워커 노드들을 클러스터에 조인