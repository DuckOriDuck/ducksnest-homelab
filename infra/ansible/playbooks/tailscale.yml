---
# Tailscale 클라이언트 설치 및 설정 플레이북

- name: Install and Configure Tailscale
  hosts: aws_instances
  become: true
  gather_facts: true
  
  tasks:
    - name: Add Tailscale GPG key
      apt_key:
        url: https://pkgs.tailscale.com/stable/ubuntu/noble.noarmor.gpg
        keyring: /usr/share/keyrings/tailscale-archive-keyring.gpg
        state: present
        
    - name: Add Tailscale repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/tailscale-archive-keyring.gpg] https://pkgs.tailscale.com/stable/ubuntu noble main"
        state: present
        filename: tailscale
        
    - name: Install Tailscale
      apt:
        name: tailscale
        state: present
        update_cache: true
        
    - name: Enable IP forwarding for Tailscale
      sysctl:
        name: "{{ item }}"
        value: "1"
        sysctl_set: true
        reload: true
      loop:
        - net.ipv4.ip_forward
        - net.ipv6.conf.all.forwarding
        
    - name: Configure Tailscale to start on boot
      systemd:
        name: tailscaled
        enabled: true
        state: started
        
    # Tailscale 연결은 수동으로 하거나 Jenkins에서 자동화
    - name: Create Tailscale connection script
      copy:
        content: |
          #!/bin/bash
          # Tailscale 연결 스크립트
          
          HEADSCALE_URL="${HEADSCALE_URL:-https://{{ hostvars[groups['jenkins_headscale'][0]]['ansible_host'] }}}"
          AUTH_KEY="${AUTH_KEY:-}"
          
          if [ -z "$AUTH_KEY" ]; then
            echo "사용법: AUTH_KEY=<key> $0"
            echo "또는: $0 <auth-key>"
            echo ""
            echo "Pre-auth key는 Headscale 서버에서 생성하세요:"
            echo "docker exec headscale headscale --user ubuntu preauthkeys create --reusable --expiration 24h"
            exit 1
          fi
          
          if [ -n "$1" ]; then
            AUTH_KEY="$1"
          fi
          
          echo "Connecting to Headscale at $HEADSCALE_URL..."
          sudo tailscale up --login-server "$HEADSCALE_URL" --authkey "$AUTH_KEY" --accept-routes
          
          echo "Tailscale connection status:"
          tailscale status
          
          echo "Tailscale IP addresses:"
          tailscale ip -4
        dest: /opt/homelab/scripts/connect-tailscale.sh
        mode: '0755'
        owner: ubuntu
        group: ubuntu
        
    - name: Create Tailscale status check script
      copy:
        content: |
          #!/bin/bash
          # Tailscale 상태 확인 스크립트
          
          echo "=== Tailscale Status ==="
          tailscale status
          
          echo ""
          echo "=== Network Interfaces ==="
          ip addr show tailscale0 2>/dev/null || echo "Tailscale interface not found"
          
          echo ""
          echo "=== IP Addresses ==="
          echo "IPv4: $(tailscale ip -4 2>/dev/null || echo 'Not connected')"
          echo "IPv6: $(tailscale ip -6 2>/dev/null || echo 'Not connected')"
          
          echo ""
          echo "=== DNS Configuration ==="
          tailscale status --json | jq -r '.Self.DNSName // "Not connected"' 2>/dev/null || echo "jq not available"
          
          echo ""
          echo "=== Peer Information ==="
          tailscale status --peers
        dest: /opt/homelab/scripts/tailscale-status.sh
        mode: '0755'
        owner: ubuntu
        group: ubuntu
        
    - name: Display connection instructions
      debug:
        msg: |
          🔗 Tailscale 설치 완료!
          
          연결 방법:
          1. Headscale에서 pre-auth key 생성:
             docker exec headscale headscale --user ubuntu preauthkeys create --reusable --expiration 24h
          
          2. 생성된 키로 연결:
             sudo /opt/homelab/scripts/connect-tailscale.sh <auth-key>
          
          3. 상태 확인:
             /opt/homelab/scripts/tailscale-status.sh
          
          참고: Headscale URL = https://{{ hostvars[groups['jenkins_headscale'][0]]['ansible_host'] }}