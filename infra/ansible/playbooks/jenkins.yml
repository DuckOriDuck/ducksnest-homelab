---
# Jenkins 서버 설정 플레이북

- name: Setup Jenkins Server
  hosts: jenkins
  become: true
  gather_facts: true
  
  vars:
    docker_compose_content: |
      version: '3.8'
      services:
        jenkins:
          image: jenkins/jenkins:{{ jenkins_version }}
          container_name: jenkins
          restart: unless-stopped
          ports:
            - "{{ jenkins_http_port }}:8080"
            - "{{ jenkins_agent_port }}:50000"
          volumes:
            - "{{ jenkins_data_dir }}:/var/jenkins_home"
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "/usr/bin/docker:/usr/bin/docker"
          environment:
            - JENKINS_OPTS=--httpPort=8080
            - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Xmx2g -Xms512m
          user: root
          networks:
            - jenkins
            
      networks:
        jenkins:
          driver: bridge

  tasks:
    # Docker 설치
    - name: Install Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        
    - name: Add Docker repository
      apt_repository:
        repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        
    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: true
        
    - name: Add users to docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: true
      loop: "{{ docker_users }}"
      
    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: true
        
    # Jenkins 설정
    - name: Create Jenkins directories
      file:
        path: "{{ item }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      loop:
        - /opt/jenkins
        - "{{ jenkins_data_dir }}"
        
    - name: Create Jenkins Docker Compose file
      copy:
        content: "{{ docker_compose_content }}"
        dest: "{{ jenkins_docker_compose_file }}"
        owner: ubuntu
        group: ubuntu
        mode: '0644'
        
    # Ansible 설치 (Jenkins에서 사용)
    - name: Install Python3 and pip
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
        state: present
        
    - name: Install Ansible
      pip:
        name:
          - ansible
          - ansible-vault
        state: present
        extra_args: --user
      become_user: ubuntu
      
    # Jenkins 서비스 시작
    - name: Start Jenkins with Docker Compose
      community.docker.docker_compose:
        project_src: /opt/jenkins
        files:
          - docker-compose.yml
        state: present
        pull: true
      become_user: ubuntu
      
    # Jenkins 초기 설정 대기
    - name: Wait for Jenkins to start
      wait_for:
        port: "{{ jenkins_http_port }}"
        host: "{{ ansible_host }}"
        timeout: 300
        
    # Jenkins 초기 패스워드 확인
    - name: Get Jenkins initial admin password
      shell: |
        if [ -f {{ jenkins_data_dir }}/secrets/initialAdminPassword ]; then
          cat {{ jenkins_data_dir }}/secrets/initialAdminPassword
        else
          echo "No initial password found"
        fi
      register: jenkins_initial_password
      become_user: ubuntu
      
    - name: Display Jenkins information
      debug:
        msg: |
          🏗️  Jenkins 설정 완료!
          URL: http://{{ ansible_host }}:{{ jenkins_http_port }}
          초기 관리자 패스워드: {{ jenkins_initial_password.stdout }}
          
    # 백업 설정
    - name: Create Jenkins backup script
      copy:
        content: |
          #!/bin/bash
          BACKUP_DIR="/opt/jenkins/backups"
          DATE=$(date +%Y%m%d_%H%M%S)
          
          mkdir -p "$BACKUP_DIR"
          
          # Jenkins 백업
          docker exec jenkins tar czf - -C /var/jenkins_home . > "$BACKUP_DIR/jenkins_$DATE.tar.gz"
          
          # 7일 이상된 백업 삭제
          find "$BACKUP_DIR" -name "jenkins_*.tar.gz" -mtime +7 -delete
          
          echo "Jenkins backup completed: $DATE"
        dest: /opt/jenkins/scripts/backup.sh
        mode: '0755'
        owner: ubuntu
        group: ubuntu
        
    - name: Create Jenkins backup directory
      file:
        path: "{{ item }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      loop:
        - /opt/jenkins/scripts
        - /opt/jenkins/backups
        - /opt/jenkins/logs
        
    - name: Setup Jenkins backup cron job
      cron:
        name: "Jenkins backup"
        minute: "0"
        hour: "2"
        job: "/opt/jenkins/scripts/backup.sh >> /opt/jenkins/logs/backup.log 2>&1"
        user: ubuntu